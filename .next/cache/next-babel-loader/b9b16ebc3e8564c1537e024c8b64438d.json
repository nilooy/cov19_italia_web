{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Personal\\\\dev\\\\covid19it\\\\cov19ItaliaWeb\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-undef */\nimport React, { useState } from \"react\";\nimport { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\nimport mapStylesDark from \"./mapStylesDark\";\nimport mapStylesRetro from \"./mapStylesRetro\";\nconst API_KEY = process.env.MAP_API;\nconst MAP_URL = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&v=3.exp&libraries=geometry`;\nconst MapComp = withScriptjs(withGoogleMap(props => __jsx(GoogleMap, {\n  defaultOptions: {\n    styles: \"retro\"\n  },\n  defaultZoom: 6,\n  defaultCenter: {\n    lat: 41.8719,\n    lng: 12.5674\n  },\n  options: {\n    styles: props.darkMode ? mapStylesDark : mapStylesRetro\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, props.children)));\n\nconst Map = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    isOpen: 0,\n    infoIndex: null\n  });\n\n  const handleToggleOpen = index => {\n    setState({\n      isOpen: true,\n      infoIndex: index\n    });\n  };\n\n  const handleToggleClose = () => {\n    setState({\n      isOpen: false,\n      infoIndex: null\n    });\n  };\n\n  return __jsx(MapComp, {\n    googleMapURL: MAP_URL,\n    loadingElement: __jsx(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }),\n    containerElement: __jsx(\"div\", {\n      style: {\n        height: `100vh`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }),\n    mapElement: __jsx(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }),\n    center: {\n      lat: 41.8719,\n      lng: 12.5674\n    },\n    darkMode: props.darkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, props.cordinates.map((item, index) => __jsx(Marker, {\n    key: index,\n    position: {\n      lat: parseFloat(item.lat),\n      lng: parseFloat(item.long)\n    },\n    options: {\n      icon: {\n        url: \"https://image.flaticon.com/icons/svg/2659/2659980.svg\",\n        scaledSize: new google.maps.Size(25, 25)\n      }\n    },\n    onMouseOver: () => handleToggleOpen(index),\n    onMouseOut: () => handleToggleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, state.infoIndex === index && __jsx(InfoWindow, {\n    onCloseClick: handleToggleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, __jsx(\"h6\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, item.denominazione_provincia), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Totale Casi:\", \" \", __jsx(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \" \", item.totale_casi)))))));\n};\n\nexport default Map;","map":{"version":3,"sources":["D:/Code/Personal/dev/covid19it/cov19ItaliaWeb/components/Map.js"],"names":["React","useState","GoogleMap","InfoWindow","Marker","withGoogleMap","withScriptjs","mapStylesDark","mapStylesRetro","API_KEY","process","env","MAP_API","MAP_URL","MapComp","props","styles","lat","lng","darkMode","children","Map","state","setState","isOpen","infoIndex","handleToggleOpen","index","handleToggleClose","height","cordinates","map","item","parseFloat","long","icon","url","scaledSize","google","maps","Size","textAlign","denominazione_provincia","totale_casi"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  InfoWindow,\r\n  Marker,\r\n  withGoogleMap,\r\n  withScriptjs,\r\n} from \"react-google-maps\";\r\nimport mapStylesDark from \"./mapStylesDark\";\r\nimport mapStylesRetro from \"./mapStylesRetro\";\r\n\r\nconst API_KEY = process.env.MAP_API;\r\nconst MAP_URL = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&v=3.exp&libraries=geometry`;\r\n\r\nconst MapComp = withScriptjs(\r\n  withGoogleMap((props) => (\r\n    <GoogleMap\r\n      defaultOptions={{ styles: \"retro\" }}\r\n      defaultZoom={6}\r\n      defaultCenter={{ lat: 41.8719, lng: 12.5674 }}\r\n      options={{\r\n        styles: props.darkMode ? mapStylesDark : mapStylesRetro,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nconst Map = (props) => {\r\n  const [state, setState] = useState({\r\n    isOpen: 0,\r\n    infoIndex: null,\r\n  });\r\n\r\n  const handleToggleOpen = (index) => {\r\n    setState({\r\n      isOpen: true,\r\n      infoIndex: index,\r\n    });\r\n  };\r\n\r\n  const handleToggleClose = () => {\r\n    setState({\r\n      isOpen: false,\r\n      infoIndex: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MapComp\r\n      googleMapURL={MAP_URL}\r\n      loadingElement={<div style={{ height: `100%` }} />}\r\n      containerElement={<div style={{ height: `100vh` }} />}\r\n      mapElement={<div style={{ height: `100%` }} />}\r\n      center={{ lat: 41.8719, lng: 12.5674 }}\r\n      darkMode={props.darkMode}\r\n    >\r\n      {props.cordinates.map((item, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={{ lat: parseFloat(item.lat), lng: parseFloat(item.long) }}\r\n          options={{\r\n            icon: {\r\n              url: \"https://image.flaticon.com/icons/svg/2659/2659980.svg\",\r\n              scaledSize: new google.maps.Size(25, 25),\r\n            },\r\n          }}\r\n          onMouseOver={() => handleToggleOpen(index)}\r\n          onMouseOut={() => handleToggleClose()}\r\n        >\r\n          {state.infoIndex === index && (\r\n            <InfoWindow onCloseClick={handleToggleClose}>\r\n              <div>\r\n                <h6 style={{ textAlign: \"center\" }}>\r\n                  {item.denominazione_provincia}\r\n                </h6>\r\n                <h5>\r\n                  Totale Casi:{\" \"}\r\n                  <span className=\"text-danger\"> {item.totale_casi}</span>\r\n                </h5>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </Marker>\r\n      ))}\r\n    </MapComp>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}