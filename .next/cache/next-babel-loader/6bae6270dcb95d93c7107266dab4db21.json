{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Code\\\\Personal\\\\dev\\\\covid19it\\\\cov19ItaliaWeb\\\\components\\\\LeftSideBar.js\";\n\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Clock from \"react-live-clock\";\nimport CardStat from \"./CardStat\";\n\nvar LeftSideBar = function LeftSideBar(props) {\n  var _useState = useState({\n    nuovi_positivi: 0,\n    totale_casi: 0,\n    deceduti: 0,\n    casi_testati: 0,\n    tamponi: 0,\n    terapia_intensiva: 0,\n    data: Date.now()\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    axios.get(process.env.API_URL + \"stats\").then(function (res) {\n      var resData = res.data[0];\n      setState({\n        nuovi_positivi: resData.nuovi_positivi,\n        totale_casi: resData.totale_casi,\n        deceduti: resData.deceduti,\n        casi_testati: resData.casi_testati,\n        tamponi: resData.tamponi,\n        terapia_intensiva: resData.terapia_intensiva,\n        \"l'ultimo_aggiornamento\": formatDate(resData.data)\n      });\n    });\n  }, []);\n\n  var makeUpperCase = function makeUpperCase(text) {\n    var splitedText = text.split(\"_\");\n    var result = \"\";\n\n    for (var i = 0; i < splitedText.length; i++) {\n      result += \" \" + splitedText[i][0].toUpperCase() + splitedText[i].slice(1);\n    }\n\n    return result;\n  };\n\n  var formatDate = function formatDate(dateString) {\n    return new Date(dateString).toLocaleString(\"it-IT\", {\n      timeZone: \"UTC\"\n    });\n  };\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"border-bottom border-gray w-100 px-2 d-flex align-items-center  justify-content-between\",\n    style: {\n      height: 90\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"logo_anim\",\n    src: \"https://image.flaticon.com/icons/svg/2659/2659980.svg\",\n    alt: \"cov19\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    className: \"h5 text-dark mb-0 mx-2 font-weight-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Statistica\"), __jsx(\"button\", {\n    className: \"btn\",\n    onClick: props.toggleDarkModeLocal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"https://image.flaticon.com/icons/svg/841/841641.svg\",\n    width: \"20\",\n    alt: \"flaticon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Clock, {\n    format: \"D/MM/YYYY:HH:mm:ss\",\n    ticking: true,\n    timezone: \"Europe/Rome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: \"w-100 d-flex flex-wrap align-items-start align-content-start position-relative\",\n    style: {\n      height: \"calc(100% - 90px)\",\n      overflowY: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, Object.keys(state).map(function (key, index) {\n    return __jsx(CardStat, {\n      title: makeUpperCase(key),\n      text: state[key],\n      key: index,\n      dateField: key == \"l'ultimo_aggiornamento\" ? true : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default LeftSideBar;","map":{"version":3,"sources":["D:/Code/Personal/dev/covid19it/cov19ItaliaWeb/components/LeftSideBar.js"],"names":["axios","React","Fragment","useEffect","useState","Clock","CardStat","LeftSideBar","props","nuovi_positivi","totale_casi","deceduti","casi_testati","tamponi","terapia_intensiva","data","Date","now","state","setState","get","process","env","API_URL","then","res","resData","formatDate","makeUpperCase","text","splitedText","split","result","i","length","toUpperCase","slice","dateString","toLocaleString","timeZone","height","toggleDarkModeLocal","overflowY","Object","keys","map","key","index"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport Clock from \"react-live-clock\";\r\nimport CardStat from \"./CardStat\";\r\n\r\nconst LeftSideBar = (props) => {\r\n  const [state, setState] = useState({\r\n    nuovi_positivi: 0,\r\n    totale_casi: 0,\r\n    deceduti: 0,\r\n    casi_testati: 0,\r\n    tamponi: 0,\r\n    terapia_intensiva: 0,\r\n    data: Date.now(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(process.env.API_URL + \"stats\").then((res) => {\r\n      const resData = res.data[0];\r\n\r\n      setState({\r\n        nuovi_positivi: resData.nuovi_positivi,\r\n        totale_casi: resData.totale_casi,\r\n        deceduti: resData.deceduti,\r\n        casi_testati: resData.casi_testati,\r\n        tamponi: resData.tamponi,\r\n        terapia_intensiva: resData.terapia_intensiva,\r\n        \"l'ultimo_aggiornamento\": formatDate(resData.data),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const makeUpperCase = (text) => {\r\n    let splitedText = text.split(\"_\");\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < splitedText.length; i++) {\r\n      result += \" \" + splitedText[i][0].toUpperCase() + splitedText[i].slice(1);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString(\"it-IT\", { timeZone: \"UTC\" });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"border-bottom border-gray w-100 px-2 d-flex align-items-center  justify-content-between\"\r\n        style={{ height: 90 }}\r\n      >\r\n        <div>\r\n          <img\r\n            className=\"logo_anim\"\r\n            src=\"https://image.flaticon.com/icons/svg/2659/2659980.svg\"\r\n            alt=\"cov19\"\r\n          />\r\n          <span className=\"h5 text-dark mb-0 mx-2 font-weight-bold\">\r\n            Statistica\r\n          </span>\r\n\r\n          <button className=\"btn\" onClick={props.toggleDarkModeLocal}>\r\n            <img\r\n              src=\"https://image.flaticon.com/icons/svg/841/841641.svg\"\r\n              width=\"20\"\r\n              alt=\"flaticon\"\r\n            />\r\n          </button>\r\n          <br />\r\n          <p>\r\n            <Clock\r\n              format={\"D/MM/YYYY:HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Europe/Rome\"}\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"w-100 d-flex flex-wrap align-items-start align-content-start position-relative\"\r\n        style={{ height: \"calc(100% - 90px)\", overflowY: \"auto\" }}\r\n      >\r\n        {Object.keys(state).map((key, index) => (\r\n          <CardStat\r\n            title={makeUpperCase(key)}\r\n            text={state[key]}\r\n            key={index}\r\n            dateField={key == \"l'ultimo_aggiornamento\" ? true : false}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeftSideBar;\r\n"]},"metadata":{},"sourceType":"module"}