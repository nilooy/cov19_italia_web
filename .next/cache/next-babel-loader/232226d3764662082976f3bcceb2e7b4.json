{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Practice\\\\cov19ItaliaWeb\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\nconst MAP_URL = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCSA62-dhozQFO_pcHIqDVRIQ_bv7tiXdQ&v=3.exp&libraries=geometry`;\nconst MapComp = withScriptjs(withGoogleMap(props => __jsx(GoogleMap, {\n  defaultZoom: 5.8,\n  defaultCenter: {\n    lat: 41.8719,\n    lng: 12.5674\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, props.children)));\n\nconst Map = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    isOpen: false\n  });\n\n  const handleToggleOpen = () => {\n    setState({\n      isOpen: true\n    });\n  };\n\n  const handleToggleClose = () => {\n    setState({\n      isOpen: false,\n      infoIndex: 0\n    });\n  };\n\n  return __jsx(MapComp, {\n    googleMapURL: MAP_URL,\n    loadingElement: __jsx(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }\n    }),\n    containerElement: __jsx(\"div\", {\n      style: {\n        height: `100vh`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }),\n    mapElement: __jsx(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }),\n    center: {\n      lat: 41.8719,\n      lng: 12.5674\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, props.cordinates.map((item, index) => __jsx(Marker, {\n    key: index,\n    position: {\n      lat: parseFloat(item.lat),\n      lng: parseFloat(item.long)\n    },\n    onClick: () => handleToggleOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, state.isOpen && __jsx(InfoWindow, {\n    onCloseClick: handleToggleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"hjbjhbj\")))));\n};\n\nexport default Map;","map":{"version":3,"sources":["D:/Code/Practice/cov19ItaliaWeb/components/Map.js"],"names":["React","useState","GoogleMap","InfoWindow","Marker","withGoogleMap","withScriptjs","MAP_URL","MapComp","props","lat","lng","children","Map","state","setState","isOpen","handleToggleOpen","handleToggleClose","infoIndex","height","cordinates","map","item","index","parseFloat","long"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,YALF,QAMO,mBANP;AAQA,MAAMC,OAAO,GAAI,gHAAjB;AAEA,MAAMC,OAAO,GAAGF,YAAY,CAC1BD,aAAa,CAAEI,KAAD,IACZ,MAAC,SAAD;AAAW,EAAA,WAAW,EAAE,GAAxB;AAA6B,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,CAACG,QADT,CADW,CADa,CAA5B;;AAQA,MAAMC,GAAG,GAAIJ,KAAD,IAAW;AACrB,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC;AACjCe,IAAAA,MAAM,EAAE;AADyB,GAAD,CAAlC;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,MAAM,EAAE;AADD,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAM;AAC9BH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPG,MAAAA,SAAS,EAAE;AAFJ,KAAD,CAAR;AAID,GALD;;AAOA,SACE,MAAC,OAAD;AACE,IAAA,YAAY,EAAEZ,OADhB;AAEE,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB;AAGE,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB;AAIE,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd;AAKE,IAAA,MAAM,EAAE;AAAEV,MAAAA,GAAG,EAAE,OAAP;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,KAAK,CAACY,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KACpB,MAAC,MAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,QAAQ,EAAE;AAAEd,MAAAA,GAAG,EAAEe,UAAU,CAACF,IAAI,CAACb,GAAN,CAAjB;AAA6BC,MAAAA,GAAG,EAAEc,UAAU,CAACF,IAAI,CAACG,IAAN;AAA5C,KAFZ;AAGE,IAAA,OAAO,EAAE,MAAMT,gBAAgB,EAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,KAAK,CAACE,MAAN,IACC,MAAC,UAAD;AAAY,IAAA,YAAY,EAAEE,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANJ,CADD,CAPH,CADF;AAuBD,CAzCD;;AA2CA,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  InfoWindow,\r\n  Marker,\r\n  withGoogleMap,\r\n  withScriptjs,\r\n} from \"react-google-maps\";\r\n\r\nconst MAP_URL = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCSA62-dhozQFO_pcHIqDVRIQ_bv7tiXdQ&v=3.exp&libraries=geometry`;\r\n\r\nconst MapComp = withScriptjs(\r\n  withGoogleMap((props) => (\r\n    <GoogleMap defaultZoom={5.8} defaultCenter={{ lat: 41.8719, lng: 12.5674 }}>\r\n      {props.children}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nconst Map = (props) => {\r\n  const [state, setState] = useState({\r\n    isOpen: false,\r\n  });\r\n\r\n  const handleToggleOpen = () => {\r\n    setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  const handleToggleClose = () => {\r\n    setState({\r\n      isOpen: false,\r\n      infoIndex: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MapComp\r\n      googleMapURL={MAP_URL}\r\n      loadingElement={<div style={{ height: `100%` }} />}\r\n      containerElement={<div style={{ height: `100vh` }} />}\r\n      mapElement={<div style={{ height: `100%` }} />}\r\n      center={{ lat: 41.8719, lng: 12.5674 }}\r\n    >\r\n      {props.cordinates.map((item, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={{ lat: parseFloat(item.lat), lng: parseFloat(item.long) }}\r\n          onClick={() => handleToggleOpen()}\r\n        >\r\n          {state.isOpen && (\r\n            <InfoWindow onCloseClick={handleToggleClose}>\r\n              <p>hjbjhbj</p>\r\n            </InfoWindow>\r\n          )}\r\n        </Marker>\r\n      ))}\r\n    </MapComp>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}