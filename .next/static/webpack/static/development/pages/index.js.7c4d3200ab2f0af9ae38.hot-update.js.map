{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.7c4d3200ab2f0af9ae38.hot-update.js","sources":["webpack:///./components/LeftSideBar.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport Clock from \"react-live-clock\";\r\nimport CardStat from \"./CardStat\";\r\n\r\nconst LeftSideBar = (props) => {\r\n  const [state, setState] = useState({\r\n    nuovi_positivi: 0,\r\n    totale_casi: 0,\r\n    deceduti: 0,\r\n    casi_testati: 0,\r\n    tamponi: 0,\r\n    terapia_intensiva: 0,\r\n    data: Date.now(),\r\n  });\r\n\r\n  const [toolTip, setToolTip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(process.env.API_URL + \"stats\").then((res) => {\r\n      const resData = res.data[0];\r\n\r\n      setState({\r\n        nuovi_positivi: resData.nuovi_positivi,\r\n        totale_casi: resData.totale_casi,\r\n        deceduti: resData.deceduti,\r\n        casi_testati: resData.casi_testati,\r\n        tamponi: resData.tamponi,\r\n        terapia_intensiva: resData.terapia_intensiva,\r\n        \"l'ultimo_aggiornamento\": formatDate(resData.data),\r\n      });\r\n\r\n      showToolTip();\r\n    });\r\n  }, []);\r\n\r\n  const showToolTip = () => {\r\n    if (localStorage.getItem(\"darkMode\") === null) {\r\n      setTimeout(() => {\r\n        setToolTip(true);\r\n        setTimeout(() => {\r\n          setToolTip(false);\r\n        }, 5000);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const makeUpperCase = (text) => {\r\n    let splitedText = text.split(\"_\");\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < splitedText.length; i++) {\r\n      result += \" \" + splitedText[i][0].toUpperCase() + splitedText[i].slice(1);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString(\"it-IT\", { timeZone: \"UTC\" });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={\r\n          \"border-bottom border-gray w-100 px-2 d-flex align-items-center  justify-content-between \" +\r\n          (props.darkMode ? \"darkMode\" : \"\")\r\n        }\r\n        style={{ height: 90 }}\r\n      >\r\n        <div style={{ width: \"100%\" }}>\r\n          <div className=\"header-title\">\r\n            <img\r\n              className=\"logo_anim\"\r\n              src=\"https://image.flaticon.com/icons/svg/2659/2659980.svg\"\r\n              alt=\"cov19\"\r\n            />\r\n            <span className=\"h5 mb-0 mx-2 font-weight-bold\">Statistica</span>\r\n\r\n            <span\r\n              className=\"lightIcon tooltip-c\"\r\n              onClick={props.toggleDarkMode}\r\n            >\r\n              <img\r\n                src={\r\n                  !props.darkMode\r\n                    ? \"https://image.flaticon.com/icons/svg/841/841641.svg\"\r\n                    : \"https://image.flaticon.com/icons/png/512/841/841539.png\"\r\n                }\r\n                width=\"20\"\r\n                alt=\"flaticon\"\r\n              />\r\n              <span\r\n                className={\"tooltiptext \" + (toolTip ? \"tooltiptext-show\" : \"\")}\r\n              >\r\n                Passare alla modalit√† luce\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <Clock\r\n              format={\"D/MM/YYYY:HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Europe/Rome\"}\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={\r\n          \"w-100 d-flex flex-wrap align-items-start align-content-start position-relative customScrollbar \" +\r\n          (props.darkMode ? \"bg-dark\" : \"\")\r\n        }\r\n        style={{ height: \"calc(100% - 90px)\", overflowY: \"auto\" }}\r\n      >\r\n        {Object.keys(state).map((key, index) => (\r\n          <CardStat\r\n            title={makeUpperCase(key)}\r\n            text={state[key]}\r\n            key={index}\r\n            dateField={key == \"l'ultimo_aggiornamento\" ? true : false}\r\n            darkMode={props.darkMode}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeftSideBar;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAIA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AACA;;;;A","sourceRoot":""}