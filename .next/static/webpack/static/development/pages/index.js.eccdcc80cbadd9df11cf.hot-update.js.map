{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.eccdcc80cbadd9df11cf.hot-update.js","sources":["webpack:///./components/Map.js","webpack:///./components/mapStylesDark.js","webpack:///./pages/index.js"],"sourcesContent":["/*global google*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  InfoWindow,\r\n  Marker,\r\n  withGoogleMap,\r\n  withScriptjs,\r\n} from \"react-google-maps\";\r\nimport mapStylesDark from \"./mapStylesDark\";\r\nimport mapStylesRetro from \"./mapStylesRetro\";\r\n\r\nconst API_KEY = process.env.MAP_API;\r\nconst MAP_URL = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&v=3.exp&libraries=geometry`;\r\n\r\nconst MapComp = withScriptjs(\r\n  withGoogleMap((props) => (\r\n    <GoogleMap\r\n      defaultOptions={{ styles: \"retro\" }}\r\n      defaultZoom={6}\r\n      defaultCenter={{ lat: 41.8719, lng: 12.5674 }}\r\n      defaultOptions={{\r\n        styles: props.darkMode ? mapStylesDark : mapStylesRetro,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nconst Map = (props) => {\r\n  const [state, setState] = useState({\r\n    isOpen: 0,\r\n    infoIndex: null,\r\n  });\r\n\r\n  const handleToggleOpen = (index) => {\r\n    setState({\r\n      isOpen: true,\r\n      infoIndex: index,\r\n    });\r\n  };\r\n\r\n  const handleToggleClose = () => {\r\n    setState({\r\n      isOpen: false,\r\n      infoIndex: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MapComp\r\n      googleMapURL={MAP_URL}\r\n      loadingElement={<div style={{ height: `100%` }} />}\r\n      containerElement={<div style={{ height: `100vh` }} />}\r\n      mapElement={<div style={{ height: `100%` }} />}\r\n      center={{ lat: 41.8719, lng: 12.5674 }}\r\n      darkMode={props.darkMode}\r\n    >\r\n      {props.cordinates.map((item, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={{ lat: parseFloat(item.lat), lng: parseFloat(item.long) }}\r\n          options={{\r\n            icon: {\r\n              url: \"https://image.flaticon.com/icons/svg/2659/2659980.svg\",\r\n              scaledSize: new google.maps.Size(25, 25),\r\n            },\r\n          }}\r\n          onMouseOver={() => handleToggleOpen(index)}\r\n          onMouseOut={() => handleToggleClose()}\r\n        >\r\n          {state.infoIndex === index && (\r\n            <InfoWindow onCloseClick={handleToggleClose}>\r\n              <div>\r\n                <h6 style={{ textAlign: \"center\" }}>\r\n                  {item.denominazione_provincia}\r\n                </h6>\r\n                <h5>\r\n                  Totale Casi:{\" \"}\r\n                  <span className=\"text-danger\"> {item.totale_casi}</span>\r\n                </h5>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </Marker>\r\n      ))}\r\n    </MapComp>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","export default [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [{ color: \"#ffffff\" }],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [{ color: \"#000000\" }, { lightness: 13 }],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [{ color: \"#000000\" }],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [{ color: \"#144b53\" }, { lightness: 14 }, { weight: 1.4 }],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [{ color: \"#08304b\" }],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry\",\r\n    stylers: [{ color: \"#0c4152\" }, { lightness: 5 }],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [{ color: \"#000000\" }],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [{ color: \"#0b434f\" }, { lightness: 25 }],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [{ color: \"#000000\" }],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [{ color: \"#0b3d51\" }, { lightness: 16 }],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"geometry\",\r\n    stylers: [{ color: \"#000000\" }],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [{ color: \"#146474\" }],\r\n  },\r\n  { featureType: \"water\", elementType: \"all\", stylers: [{ color: \"#021019\" }] },\r\n];\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport LeftSideBar from \"../components/LeftSideBar\";\r\nimport Map from \"../components/Map\";\r\nimport RightSideBar from \"../components/RightSideBar\";\r\nimport Layout from \"../Layout\";\r\n\r\nconst Index = () => {\r\n  const [state, setState] = useState([]);\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData(\"province\");\r\n  }, []);\r\n\r\n  const getData = (route) => {\r\n    axios.get(process.env.API_URL + route).then((res) => {\r\n      let data = res.data;\r\n\r\n      data = data.filter(\r\n        (item) =>\r\n          item.denominazione_provincia != \"In fase di definizione/aggiornamento\"\r\n      );\r\n\r\n      setState(data);\r\n    });\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <main className=\"container-fluid position-absolute h-100 bg-light\">\r\n        <div className=\"row position-absolute w-100 h-100\">\r\n          <section className=\"col-md-2 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\r\n            <LeftSideBar darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n          </section>\r\n\r\n          <section className=\"col-md-8 px-0 border-right border-left border-gray position-relative h-100\">\r\n            <Map darkMode={darkMode} cordinates={state} />\r\n            <Footer />\r\n          </section>\r\n\r\n          <section\r\n            className={\r\n              \"col-md-2 position-relative d-flex flex-wrap h-100 align-items-start align-content-between px-1 py-1 \" +\r\n              (darkMode ? \"darkMode\" : \"\")\r\n            }\r\n            style={{ overflowY: \"scroll\" }}\r\n          >\r\n            <RightSideBar darkMode={darkMode} getData={getData} data={state} />\r\n          </section>\r\n        </div>\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AADA;AAJA;AAAA;AAAA;AAAA;AADA;AACA;AAaA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AA8BA;AACA;AACA;;;;;;;;;;;;AC3FA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}